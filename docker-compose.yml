services:
  nginx:
    build:
      context: .
      dockerfile: ./Backend/nginx/Dockerfile
      args: 
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    ports:
      - "8000:8000"
    volumes:
      - ./Frontend:/usr/share/nginx/html
    depends_on:
      - spa
      - pong
    env_file:
      - .env
    networks:
      - pong-network
      - game2-network
      - spa-network
    container_name: nginx

  spa:
    build:
      context: .
      dockerfile: ./Backend/spa/Dockerfile
      args: 
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    volumes:
      - ./Backend/spa:/usr/src/app/Backend
      - ./Frontend/css:/usr/src/app/Frontend/css
      - ./Frontend/templates:/usr/src/app/Frontend/templates
      - ./Frontend/ts:/usr/src/app/Frontend/ts
    networks:
      - spa-network
      - game2-network
      - pong-network
    depends_on:
      - pong
    container_name: spa
    env_file:
      - .env
    ports:
      - "3000:3000"

  pong:
    build:
      context: .
      dockerfile: ./Backend/pong/Dockerfile 
      args: 
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    volumes:
      - ./Backend/pong:/usr/src/app/Backend
    networks:
      - spa-network
      - pong-network
    container_name: pong
    env_file:
      - .env
    restart: "no"
    ports:
      - "4000:4000"

  game2:
    build:
      context: .
      dockerfile: ./Backend/pong/Dockerfile 
      args: 
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    volumes:
      - ./Backend/game2:/usr/src/app/Backend
    networks:
      - spa-network
      - game2-network
    container_name: game2
    env_file:
      - .env
    restart: "no"
    ports:
      - "4002:4002"

  users:
    build:
      context: .
      dockerfile: ./Backend/Users/Dockerfile
      args: 
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    volumes:
      - ./Backend/Users/js:/usr/src/app/Backend/js
      - sqlite_data:/usr/src/app/dataBase
    networks:
      - spa-network
    container_name: users
    env_file:
      - .env
    ports:
      - "5000:5000"

  matchmaking:
    build:
      context: .
      dockerfile: ./Backend/Matchmaking/Dockerfile 
      args: 
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    volumes:
      - ./Backend/Matchmaking:/usr/src/app/Backend
    networks:
      - spa-network
      - game2-network
      - pong-network
    container_name: matchmaking
    env_file:
      - .env
    restart: "no"
    ports:
      - "4020:4020"

networks:
  spa-network:
    driver: bridge
  pong-network:
    driver: bridge
  game2-network:
    driver: bridge

volumes:
  sqlite_data: