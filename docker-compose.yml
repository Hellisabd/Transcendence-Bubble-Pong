services:
  nginx:
    build:
      context: .
      dockerfile: ./Backend/nginx/Dockerfile
      args: 
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    ports:
      - "8000:8000"
    depends_on:
      - fastify
      - pong
    env_file:
      - .env
    networks:
      - app-network
      - pong-network
    container_name: nginx

  fastify:
    build:
      context: .
      dockerfile: ./Backend/fastify/Dockerfile
      args: 
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    volumes:
      - ./Backend/fastify:/usr/src/app/Backend
      - ./Frontend:/usr/src/app/Frontend
      - sqlite_data:/usr/src/app/dataBase
    networks:
      - app-network
      - pong-network
    container_name: fastify
    depends_on:
      - pong
    env_file:
      - .env
    ports:
      - "3000:3000"

  pong:
    build:
      context: .
      dockerfile: ./Backend/pong/Dockerfile 
      args: 
        USER_ID: ${USER_ID}
        GROUP_ID: ${GROUP_ID}
    networks:
      - app-network
      - pong-network
    container_name: pong
    env_file:
      - .env
    restart: "no"
    ports:
      - "4000:4000"

networks:
  app-network:
    driver: bridge
  pong-network:
    driver: bridge

volumes:
  sqlite_data: